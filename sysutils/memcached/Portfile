# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem 1.0
PortGroup               muniversal 1.0

name                    memcached
revision                0
version                 1.4.4
description             A high performance, distributed memory object caching system.
long_description        Memcached is a high-performance, distributed memory object \
    caching system, generic in nature, but intended for use in \
    speeding up dynamic web applications by alleviating database load.
maintainers             brett
categories              sysutils
platforms               darwin
homepage                http://www.danga.com/memcached/
master_sites            googlecode:memcached
checksums               md5 5ca5b24de347e97ac1f48f3785b4178a \
    sha1 32a4f2cee9e1c0f4d7a247844714756e3affe96a
configure.args          --mandir=${prefix}/share/man \
    --with-libevent=${prefix}
depends_lib             port:libevent

startupitem.create      yes
startupitem.name        memcached
startupitem.start       "${prefix}/bin/memcached -u nobody -m 64 -c 10240 -p 11211 -d"
startupitem.stop        "/usr/bin/killall memcached"

if {[variant_isset universal]} {
    set merger_configure_args(x86_64) --enable-64bit
    set merger_configure_args(ppc64)  --enable-64bit
} else {
    if {[info exists build_arch] && (${build_arch} == "x86_64" || $build_arch == "ppc64")} {
                configure.args-append --enable-64bit
    }
}

configure.args          ac_cv_search_umem_cache_create=no \
                        ac_cv_header_umem_h=no

variant sasl description {enable SASL authentication} {
    configure.args-append   --enable-sasl
}

variant umem description {enable libumem support} {
    depends_lib-append     port:umem
    configure.args-delete  ac_cv_search_umem_cache_create=no
    configure.args-delete  ac_cv_header_umem_h=no
}

livecheck.type  regex
livecheck.url   ${homepage}download.bml
livecheck.regex ${name}-(\\d+(?:\\.\\d+){2,})\\.
